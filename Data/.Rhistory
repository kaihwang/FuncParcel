mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryOurDATA <- ddply(OurDATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1, size = 2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = TRUE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group, ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.2))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.1)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper, ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = mean+se, ymax = mean+se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = 'mean+se', ymax = 'mean+se',x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = se, ymax = se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1*sd(Weight, na.rm=TRUE))
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = se, ymax = se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = TRUE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
clear
rm()
View(DATA)
View(xDATA)
library(ggplot2)
library(plyr)
# read data
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
#summary(DATA)
# subsetting by dropping connectome subjects
OurDATA <- subset(DATA, Group!='Connectome')
# calculate summary statistics of data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se#*sd(Weight, na.rm=TRUE))
summaryOurDATA <- ddply(OurDATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# plot weight
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se,#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se))#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)) #*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
help geom_smooth
?geom_smooth
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p
ControlDATA <- subset(DATA, Group!='Young_Controls')
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# calculate summary statistics of the weight data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
# subsetting by dropping connectome subjects
ControlDATA <- subset(DATA, Group!='Young_Controls')
View(ControlDATA)
ControlDATA <- subset(DATA, Group=='Young_Controls')
ControlDATA <- subset(summaryAATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
View(ControlDATA)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
rm(fig_modularity)
# plot modulairty against young controls
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se,
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
fig_weight <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_weight <- fig_weight + geom_line(aes(color=Group), size = 2)
fig_weight <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upperSE, ymax=lowerSE, x=Density ), alpha = 0.35)
fig_weight <- fig_weight + labs(y = "Weight")
fig_weight
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
subset(DATA, Group =='Thalamic_Patients')
PatientData <- subset(DATA, Group =='Thalamic_Patients')
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject))
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red' size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red', size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='blue', size = 2)
fig_modularity
BehavData <- read.csv("~/Google Drive/Projects/MEG/BehavData.csv")
View(BehavData)
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), )
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), data = BehavData )
fit
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
fit
summary(fi)
summary(fit)
library(lsr)
install.packages(lsr)
install.packages('lsr')
library(lsr)
etaSquared(fit)
fit
summary(fit)
etaSquared(fit)
lm(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(fit)
.085/.6918
.050/.6918
fit <-aov(RT ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(RT)
summary(fit)
0.005/0.14
0.00055/0.14595
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(plyr)
library(reshape2)
library(scales)
library(grid)
BlueScale<-c("#9ecae1", "#6baed6",  "#4292c6", "#2171b5", "#084594")
WarmScale<-c("#feb24c", "#fd8d3c", "#fc4e2a", "#e31a1c", "#b10026")
Data = read.csv('GraphGlobalData.csv', header=TRUE)
PatientData <- subset(Data, Group !='Control')
levels(PatientData$Group) <- c("", "Striatal Patients", "Thalamic Patients")
Variables_to_plot <- c('Q_zscore')
for (v in Variables_to_plot){
fig_global <- ggplot(data=PatientData, aes_string(x='Density', y=v)) + facet_wrap(~Group) + ggtitle('Modularity(Q)') + theme_grey(base_size = 32) + theme(panel.margin = unit(5, "lines"))
fig_global <- fig_global + geom_line(aes(color=Subject), size = 2) + xlim( 0.05, 0.2) + scale_colour_manual(values=c(BlueScale, WarmScale), labels = c('T1', 'T2', 'T3', 'T4', 'T5', 'S1', 'S2', 'S3', 'S4', 'S5')) + labs(y ="Z Score")
}
plot(fig_global)
ggsave(filename = "IndivModularity.pdf", plot = fig_global, width=10, height=8)
NMIDATA <- read.csv('NMI_dataframe.csv', header = TRUE)
levels(NMIDATA$Group) <- c("Controls","Striatal Patients", "Thalamic Patients")
NMIplot <- ggplot(data=NMIDATA, aes(x=Group, y=NMI, color = Group)) + geom_boxplot(size=0.5)+geom_point(size=4) + scale_colour_manual(values=c("Black","Yellow", "Blue","#888888"))
NMIplot <- NMIplot + theme_grey(base_size = 32) + labs(y="NMI") + ggtitle('Normalized mutual information (NMI)\n of modularity partition \n compared to Power/Gordon Atlases')
NMIplot <- NMIplot +theme(plot.title=element_text( size=28)) + scale_x_discrete(breaks=NULL)
NMIplot
NMIDATA <- read.csv('NMI_dataframe.csv', header = TRUE)
levels(NMIDATA$Group) <- c("Controls","Striatal Patients", "Thalamic Patients")
NMIplot <- ggplot(data=NMIDATA, aes(x=Group, y=NMI, color = Group)) + geom_boxplot(size=0.5)+geom_point(size=4) + scale_colour_manual(values=c("Black","Green", "Blue","#888888"))
NMIplot <- NMIplot + theme_grey(base_size = 32) + labs(y="NMI") + ggtitle('Normalized mutual information (NMI)\n of modularity partition \n compared to Power/Gordon Atlases')
NMIplot <- NMIplot +theme(plot.title=element_text( size=28)) + scale_x_discrete(breaks=NULL)
NMIplot
NMIDATA <- read.csv('NMI_dataframe.csv', header = TRUE)
levels(NMIDATA$Group) <- c("Controls","Striatal Patients", "Thalamic Patients")
NMIplot <- ggplot(data=NMIDATA, aes(x=Group, y=NMI, color = Group)) + geom_boxplot(size=0.5)+geom_point(size=4) + scale_colour_manual(values=c("Black","DarkGreen", "Blue","#888888"))
NMIplot <- NMIplot + theme_grey(base_size = 32) + labs(y="NMI") + ggtitle('Normalized mutual information (NMI)\n of modularity partition \n compared to Power/Gordon Atlases')
NMIplot <- NMIplot +theme(plot.title=element_text( size=28)) + scale_x_discrete(breaks=NULL)
NMIplot
ggsave(filename = "NMI.pdf", plot = NMIplot, width=10, height=8)
Data <- read.csv('PatientsNodalZscoreData.csv', header=TRUE)
PatientData <- subset(Data, node_type !='all')
PatientData$row.names <-NULL
PatientData$X <-NULL
Variables_to_plot <- c("Between_Module_Weight", "Within_Module_Weight")
for (v in Variables_to_plot){
plotData<-melt(data=Data,value.name = "z_score",variable.name = "Metric", id.vars=c("Group","Subject","Density", "node_type"), measure.vars = c(paste("Target_",v, sep=""), paste("nonTarget_", v, sep="")))
levels(plotData$node_type) <- c("All Cortical ROIs", "Cortical Connector Hubs", "Non Hubs", "Cortical Provincial Hubs")
levels(plotData$Group) <- c("Striatal Patients", "Thalamic Patients")
fig_nodal <- ggplot(data=plotData, aes(x=Density, y=z_score, linetype = Metric )) + ggtitle(gsub("_"," ",v)) + theme_grey(base_size = 32)
fig_nodal <- fig_nodal + facet_grid(Group ~ node_type) + scale_colour_manual(name = "Patients", values=c(BlueScale, WarmScale),labels = c('T1', 'T2', 'T3', 'T4', 'T5', 'S1', 'S2', 'S3', 'S4', 'S5') ) + theme(panel.margin = unit(2, "lines"))
fig_nodal <- fig_nodal + geom_line(aes(color=Subject), size = 2) + xlim( 0.05, 0.2) + ylim( -2.5, 2.5) + labs(y ="Z Score") + scale_linetype_discrete(name = "", labels = c("Target", "Non-Target"))
plot(fig_nodal)
ggsave(filename = paste(v,'.pdf', sep=''), plot = fig_nodal, units = c("in"),width=24, height=8)
}
for (v in Variables_to_plot){
plotData<-melt(data=Data,value.name = "z_score",variable.name = "Metric", id.vars=c("Group","Subject","Density", "node_type"), measure.vars = c(paste("Target_",v, sep=""), paste("nonTarget_", v, sep="")))
levels(plotData$node_type) <- c("All Cortical ROIs", "Cortical Connector Hubs", "Non Hubs", "Cortical Provincial Hubs")
levels(plotData$Group) <- c("Striatal Patients", "Thalamic Patients")
fig_nodal <- ggplot(data=plotData, aes(x=Density, y=z_score, linetype = Metric )) + ggtitle(gsub("_"," ",v)) + theme_grey(base_size = 32)
fig_nodal <- fig_nodal + facet_grid(Group ~ node_type) + scale_colour_manual(name = "Patients", values=c(BlueScale, WarmScale),labels = c('T1', 'T2', 'T3', 'T4', 'T5', 'S1', 'S2', 'S3', 'S4', 'S5') ) + theme(panel.margin = unit(1, "lines"))
fig_nodal <- fig_nodal + geom_line(aes(color=Subject), size = 2) + xlim( 0.05, 0.2) + ylim( -2.5, 2.5) + labs(y ="Z Score") + scale_linetype_discrete(name = "", labels = c("Target", "Non-Target"))
plot(fig_nodal)
ggsave(filename = paste(v,'.pdf', sep=''), plot = fig_nodal, units = c("in"),width=24, height=8)
}
for (v in Variables_to_plot){
plotData<-melt(data=Data,value.name = "z_score",variable.name = "Metric", id.vars=c("Group","Subject","Density", "node_type"), measure.vars = c(paste("Target_",v, sep=""), paste("nonTarget_", v, sep="")))
levels(plotData$node_type) <- c("All Cortical ROIs", "Cortical Connector Hubs", "Non Hubs", "Cortical Provincial Hubs")
levels(plotData$Group) <- c("Striatal Patients", "Thalamic Patients")
fig_nodal <- ggplot(data=plotData, aes(x=Density, y=z_score, linetype = Metric )) + ggtitle(gsub("_"," ",v)) + theme_grey(base_size = 32)
fig_nodal <- fig_nodal + facet_grid(Group ~ node_type) + scale_colour_manual(name = "Patients", values=c(BlueScale, WarmScale),labels = c('T1', 'T2', 'T3', 'T4', 'T5', 'S1', 'S2', 'S3', 'S4', 'S5') ) + theme(panel.margin = unit(0.5, "lines"))
fig_nodal <- fig_nodal + geom_line(aes(color=Subject), size = 2) + xlim( 0.05, 0.2) + ylim( -2.5, 2.5) + labs(y ="Z Score") + scale_linetype_discrete(name = "", labels = c("Target", "Non-Target"))
plot(fig_nodal)
ggsave(filename = paste(v,'.pdf', sep=''), plot = fig_nodal, units = c("in"),width=24, height=8)
}
