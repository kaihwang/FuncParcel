)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
clear
rm()
View(DATA)
View(xDATA)
library(ggplot2)
library(plyr)
# read data
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
#summary(DATA)
# subsetting by dropping connectome subjects
OurDATA <- subset(DATA, Group!='Connectome')
# calculate summary statistics of data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se#*sd(Weight, na.rm=TRUE))
summaryOurDATA <- ddply(OurDATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# plot weight
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se,#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se))#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)) #*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
help geom_smooth
?geom_smooth
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p
ControlDATA <- subset(DATA, Group!='Young_Controls')
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# calculate summary statistics of the weight data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
# subsetting by dropping connectome subjects
ControlDATA <- subset(DATA, Group!='Young_Controls')
View(ControlDATA)
ControlDATA <- subset(DATA, Group=='Young_Controls')
ControlDATA <- subset(summaryAATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
View(ControlDATA)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
rm(fig_modularity)
# plot modulairty against young controls
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se,
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
fig_weight <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_weight <- fig_weight + geom_line(aes(color=Group), size = 2)
fig_weight <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upperSE, ymax=lowerSE, x=Density ), alpha = 0.35)
fig_weight <- fig_weight + labs(y = "Weight")
fig_weight
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
subset(DATA, Group =='Thalamic_Patients')
PatientData <- subset(DATA, Group =='Thalamic_Patients')
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject))
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red' size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red', size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='blue', size = 2)
fig_modularity
BehavData <- read.csv("~/Google Drive/Projects/MEG/BehavData.csv")
View(BehavData)
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), )
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), data = BehavData )
fit
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
fit
summary(fi)
summary(fit)
library(lsr)
install.packages(lsr)
install.packages('lsr')
library(lsr)
etaSquared(fit)
fit
summary(fit)
etaSquared(fit)
lm(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(fit)
.085/.6918
.050/.6918
fit <-aov(RT ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(RT)
summary(fit)
0.005/0.14
0.00055/0.14595
exit
install.packages("car")
install.packages("afex")
install.packages("phia")
install.packages("snow")
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
View(Thalamus_Data)
View(Thalamus_Data)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
View(Thalamus_Data)
View(Thalamus_Data)
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- geom_point()
plot(cog_plot)
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- geom_point()
plot(cog_plot)
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- cog_plot + geom_point()
plot(cog_plot)
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- cog_plot + geom_point()
cog_plot <- cog_plot + stats_smooth()
plot(cog_plot)
### plot to compare with cog flexibility
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- cog_plot + geom_point()
cog_plot <- cog_plot + geom_smooth(method=lm)
plot(cog_plot)
m <-lm(cog ~ PC, Thalamus_Data)
summary(m)
cor(Thalamus_Data$PC, Thalamus_Data$cog)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei','Nonspecific \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNone Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
View(Thalamus_Data)
View(Thalamus_plus_cortical_data)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,7) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,12) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,8) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei','Nonspecific \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNone Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,8) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei','Nonspecific \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNone Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,8) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
ggsave(filename = 'Cog_classification.pdf', plot = volplot, units = c("in"),width=6.5, height=1.7,dpi=300)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei','Nonspecific \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNone Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
#PC
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=PC))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,1) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei','Nonspecific \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNone Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
#PC
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=PC))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,1) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=WMD))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(-3,4.5) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,8) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
Nuclei_order <-c('AN', 'LD', 'MD', 'CL', 'CeM', 'CM', 'Pf', 'Li', 'PuA', 'PuI', 'PuL','PuM','LP','Po','SG','MGN','LGN','VA','VL','VM','VPI','VPL','VPM' )
Thalamus_Data$Morel.Parcellations_f = factor(Thalamus_Data$Morel.Parcellations, levels=Nuclei_order)
#CI_colors <- c("#008080", "purple", "green", "red", "yellow", "magenta", "cyan", "pink", "blue", "pink")
### volcano plot
Variables_to_plot <- c('PC'  ) #'NNC', 'BNWR', 'bcc' 'WMD'
Variables_to_plot <- c('PC'  ) #'NNC', 'BNWR', 'bcc' 'WMD'
for (v in Variables_to_plot){
volplot <- ggplot(data = Thalamus_Data, aes_string(x=v))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Functional.Network) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,1) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
volplot <- volplot + ggtitle("Thalamus Functional Atlas")
plot(volplot)
#ggsave(filename = paste(v,'_tha_fn_density.pdf', sep=''), plot = volplot, units = c("in"),width=3.4, height=1.5)
volplot <- ggplot(data = Cortical_Data, aes_string(x=v))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Functional.Network) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim( 0,1) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
volplot <- volplot + ggtitle("Cortical ROI")
plot(volplot)
ggsave(filename = paste(v,'_cortical_fn_density.pdf', sep=''), plot = volplot, units = c("in"),width=3.4, height=1.5)
volplot <- ggplot(data = Thalamus_Data, aes_string(x=v))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Anatomical.Parcellations) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim( 0,1) +  theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
volplot <- volplot + ggtitle("Thalamus Oxford-FSL Atlas")
plot(volplot)
#ggsave(filename = paste(v,'_thalamus_an_density.pdf', sep=''), plot = volplot, units = c("in"),width=2.85, height=1.5)
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
volplot <- ggplot(data = Thalamus_Data, aes_string(x=v))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_wrap(~Morel.Parcellations_f, ncol = 8) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim( 0,1) +theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
volplot <- volplot + ggtitle("Thalamus Morel Atlas") + theme(panel.margin.y = unit(1.25, "cm"))
plot(volplot)
#ggsave(filename = paste(v,'_thalamus_morel_density.pdf', sep=''), plot = volplot, units = c("in"),width=3.4, height=4.25)
}
volplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=cog))
volplot <- volplot + stat_density(aes(ymax = ..density..,  ymin = -..density.. ),geom = "ribbon", position = "identity" )
volplot <- volplot + facet_grid(. ~ Classification) + coord_flip() + theme_grey(base_size = 10)
volplot <- volplot  + xlim(0,8) + theme( axis.title.x=element_blank(),axis.ticks.x=element_blank(),axis.text.x=element_blank(), axis.text = element_text(colour = "black"))
plot(volplot)
ggsave(filename = 'Cog_classification.pdf', plot = volplot, units = c("in"),width=6.5, height=1.7,dpi=300)
cog_plot <- ggplot(data = Thalamus_Data, aes(x=PC, y=cog))
cog_plot <- cog_plot + geom_point()
cog_plot <- cog_plot + geom_smooth(method=lm)
plot(cog_plot)
