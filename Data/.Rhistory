+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))
+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
View(summaryData)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))#+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
summaryData <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryOurDATA <- ddply(OurDATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(x=Density, ymin = lower, ymax = upper))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data=summaryData, aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.1, size = 2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = TRUE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,x=Density, ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group, ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.2
))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.2))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, fill=Group, alpha=0.1))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper, ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(color=Group,ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ))
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.1)
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper ), alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper, ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = lower, ymax = upper,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = mean+se, ymax = mean+se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = 'mean+se', ymax = 'mean+se',x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = se, ymax = se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1*sd(Weight, na.rm=TRUE))
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = se, ymax = se,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p2 <- ggplot(data=OurDATA, aes(x=Density, y=Weight))
p2 + geom_smooth(aes(color=Group), method = "lm", size = 2, se = TRUE
) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group,ymin = upper, ymax = lower,x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
View(summaryData)
View(summaryDATA)
clear
rm()
View(DATA)
View(xDATA)
library(ggplot2)
library(plyr)
# read data
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
#summary(DATA)
# subsetting by dropping connectome subjects
OurDATA <- subset(DATA, Group!='Connectome')
# calculate summary statistics of data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se#*sd(Weight, na.rm=TRUE))
summaryOurDATA <- ddply(OurDATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# plot weight
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se,#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se,#*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se))#*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)) #*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.2)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_smooth(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=DATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), method = "lm", size = 2, se = FALSE
)+ geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
help geom_smooth
?geom_smooth
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), inherit.aes=FALSE, alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=Weight))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
p <- p + geom_line(aes(color=Group), size = 2)
p <- p + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
p <- p + labs(y = "Weight")
p
ControlDATA <- subset(DATA, Group!='Young_Controls')
DATA = read.csv("~/Google Drive/Projects/Thalamus-Rest/GlobalGraphData.csv", header=TRUE);
# two color scheme to use.
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
cPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# calculate summary statistics of the weight data
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upper = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lower = mean(Weight, na.rm=TRUE) - se)  #*sd(Weight, na.rm=TRUE))
# subsetting by dropping connectome subjects
ControlDATA <- subset(DATA, Group!='Young_Controls')
View(ControlDATA)
ControlDATA <- subset(DATA, Group=='Young_Controls')
ControlDATA <- subset(summaryAATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
View(ControlDATA)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
rm(fig_modularity)
# plot modulairty against young controls
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se,
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
fig_weight <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_weight <- fig_weight + geom_line(aes(color=Group), size = 2)
fig_weight <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upperSE, ymax=lowerSE, x=Density ), alpha = 0.35)
fig_weight <- fig_weight + labs(y = "Weight")
fig_weight
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
subset(DATA, Group =='Thalamic_Patients')
PatientData <- subset(DATA, Group =='Thalamic_Patients')
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject))
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red' size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red', size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='blue', size = 2)
fig_modularity
BehavData <- read.csv("~/Google Drive/Projects/MEG/BehavData.csv")
View(BehavData)
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), )
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), data = BehavData )
fit
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
fit
summary(fi)
summary(fit)
library(lsr)
install.packages(lsr)
install.packages('lsr')
library(lsr)
etaSquared(fit)
fit
summary(fit)
etaSquared(fit)
lm(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(fit)
.085/.6918
.050/.6918
fit <-aov(RT ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(RT)
summary(fit)
0.005/0.14
0.00055/0.14595
exit
install.packages("car")
install.packages("afex")
install.packages("phia")
install.packages("snow")
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
#load data
Thalamus_Data = read.csv('Thalamus_nodal_consensus.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_consensus.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Associated.System!='Other',]
CI_colors <- c("#008080", "purple", "green", "red", "yellow", "magenta", "cyan", "pink", "blue", "pink")
### boxplot to compare nodal roles between each partition, for thalamus and cortex
Variables_to_plot <- c('PC'  ) #'NNC', 'BNWR', 'bcc' 'WMD'
for (v in Variables_to_plot){
Thalamus_boxplot <- ggplot(data = Thalamus_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
Thalamus_boxplot <- Thalamus_boxplot + ggtitle(paste("Thalamus", v)) + scale_fill_manual(values=CI_colors)  + theme_grey(base_size = 32)  + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.position="none")
Thalamus_boxplot <- Thalamus_boxplot + ylim( -1, 5)
plot(Thalamus_boxplot)
Cortical_boxplot <- ggplot(data = Cortical_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
Cortical_boxplot <- Cortical_boxplot + ggtitle(paste("Cortical", v))+ scale_fill_manual(values=CI_colors) + theme_grey(base_size = 32)  + theme(axis.text.x=element_text(angle=90, hjust=1), axis.title.x=element_blank(), legend.position="none")
Cortical_boxplot <- Cortical_boxplot + ylim( -1, 5)
plot(Cortical_boxplot)
}
for (v in Variables_to_plot){
Thalamus_boxplot <- ggplot(data = Thalamus_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
Thalamus_boxplot <- Thalamus_boxplot + ggtitle(paste("Thalamus", v)) + scale_fill_manual(values=CI_colors)  + theme_grey(base_size = 32)  + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.position="none")
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
#Cortical_boxplot <- ggplot(data = Cortical_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
#Cortical_boxplot <- Cortical_boxplot + ggtitle(paste("Cortical", v))+ scale_fill_manual(values=CI_colors) + theme_grey(base_size = 32)  + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.position="none")
#Cortical_boxplot <- Cortical_boxplot + ylim( -1, 5)
#plot(Cortical_boxplot)
#ggsave(filename = paste(v,'_cortical_box_consensus.pdf', sep=''), plot = Cortical_boxplot, units = c("in"),width=6, height=4)
}
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Associated.System!='Other',]
CI_colors <- c("#008080", "purple", "green", "red", "yellow", "magenta", "cyan", "pink", "blue", "pink")
### boxplot to compare nodal roles between each partition, for thalamus and cortex
Variables_to_plot <- c('PC'  ) #'NNC', 'BNWR', 'bcc' 'WMD'
for (v in Variables_to_plot){
Thalamus_boxplot <- ggplot(data = Thalamus_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
Thalamus_boxplot <- Thalamus_boxplot + ggtitle(paste("Thalamus", v)) + scale_fill_manual(values=CI_colors)  + theme_grey(base_size = 32)  + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.position="none")
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
#Cortical_boxplot <- ggplot(data = Cortical_Data, aes_string(x="Associated.System", y=v, fill="Associated.System", colour="Associated.System")) + geom_boxplot(outlier.colour = NULL) #+geom_point() + geom_jitter(position = position_jitter(width = .1))
#Cortical_boxplot <- Cortical_boxplot + ggtitle(paste("Cortical", v))+ scale_fill_manual(values=CI_colors) + theme_grey(base_size = 32)  + theme(axis.text.x=element_blank(), axis.title.x=element_blank(), legend.position="none")
#Cortical_boxplot <- Cortical_boxplot + ylim( -1, 5)
#plot(Cortical_boxplot)
#ggsave(filename = paste(v,'_cortical_box_consensus.pdf', sep=''), plot = Cortical_boxplot, units = c("in"),width=6, height=4)
}
