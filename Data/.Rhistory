View(ControlDATA)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
rm(fig_modularity)
# plot modulairty against young controls
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upper, ymax=lower, x=Density ), alpha = 0.35)
fig_modularity
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
summaryDATA <- ddply(DATA, c('Group', 'Density'), summarise,
N = sum(!is.na(Weight)),
mean = mean(Weight, na.rm=TRUE),
sd = sd(Weight, na.rm=TRUE),
se = sd/ sqrt(N),
upperSE = mean(Weight, na.rm=TRUE) + se, #*clearsd(Weight, na.rm=TRUE),
lowerSE = mean(Weight, na.rm=TRUE) - se,
upperCI = mean(Weight, na.rm=TRUE) + 1.5*sd(Weight, na.rm=TRUE),
lowerCI = mean(Weight, na.rm=TRUE) - 1.5*sd(Weight, na.rm=TRUE))
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
fig_weight <- ggplot(data=summaryDATA, aes(x=Density, y=mean))+ theme_classic(base_size = 24) + scale_colour_manual(values=cbbPalette)
fig_weight <- fig_weight + geom_line(aes(color=Group), size = 2)
fig_weight <- fig_weight + geom_ribbon(data = summaryDATA, aes(fill=Group, ymin=upperSE, ymax=lowerSE, x=Density ), alpha = 0.35)
fig_weight <- fig_weight + labs(y = "Weight")
fig_weight
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
fig_modularity
subset(DATA, Group =='Thalamic_Patients')
PatientData <- subset(DATA, Group =='Thalamic_Patients')
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject))
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_point(data=PatientData, aes(x=Density, y=Weight, shape = Subject), size = 2)
fig_modularity
?geom_line
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject, colour='red'), size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red' size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='red', size = 2)
fig_modularity
ControlDATA <- subset(summaryDATA, Group=='Young_Controls')
fig_modularity <- ggplot(data=ControlDATA, aes(x=Density, y=mean)) + theme_classic(base_size = 24) + scale_colour_manual(values=cPalette)
fig_modularity <- fig_modularity + geom_line(aes(color=Group), size = 2)
fig_modularity <- fig_modularity + geom_ribbon(data = ControlDATA, aes(fill=Group, ymin=upperCI, ymax=lowerCI, x=Density ), alpha = 0.35)
fig_modularity <- fig_modularity + labs(y = "Weight")
PatientData <- subset(DATA, Group =='Thalamic_Patients')
fig_modularity <- fig_modularity + geom_line(data=PatientData, aes(x=Density, y=Weight, linetype = Subject), colour='blue', size = 2)
fig_modularity
BehavData <- read.csv("~/Google Drive/Projects/MEG/BehavData.csv")
View(BehavData)
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), )
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition), data = BehavData )
fit
fit <-aov(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
fit
summary(fi)
summary(fit)
library(lsr)
install.packages(lsr)
install.packages('lsr')
library(lsr)
etaSquared(fit)
fit
summary(fit)
etaSquared(fit)
lm(Accuracy ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(fit)
.085/.6918
.050/.6918
fit <-aov(RT ~ Group * Condition + Error(ID/Condition) + Group, data = BehavData )
summary(RT)
summary(fit)
0.005/0.14
0.00055/0.14595
exit
install.packages("car")
install.packages("afex")
install.packages("phia")
install.packages("snow")
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification=="Cortical \nProvincial Hubs",]
Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1[$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1[$Classification=="Cortical \nProvinciThalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]al Hubs",5]
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]<-"Cortical \nNon Provincial Hubs"
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]<-1
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs"
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5] <-1
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5] <-"1"
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]<-1
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",5]<-str("1")
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
Thalamus_plus_cortical_data_1$Classification_2 <- Thalamus_plus_cortical_data$Classification
View(Thalamus_plus_cortical_data_1)
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",16]<-1
View(Thalamus_plus_cortical_data_1)
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",15]<-1
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",15]<-factor(1)
Thalamus_plus_cortical_data_1[Thalamus_plus_cortical_data_1$Classification=="Cortical \nProvincial Hubs",15]<-factor(c(1))
levels(1)
levels(2)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon Connector Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1) + geom_hline(aes(yintercept=.61), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Non Provincial Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4) + geom_hline(aes(yintercept=.8), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical Non Provincial Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4) + geom_hline(aes(yintercept=.8), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4) + geom_hline(aes(yintercept=.8), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_plus_cortical_data_2$Classification <-factor(Thalamus_plus_cortical_data_2$Classification, levels=X_order)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4) + geom_hline(aes(yintercept=.8), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon Connector Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1) + geom_hline(aes(yintercept=.61), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
ggsave(filename = 'PC_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
#WMD
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_plus_cortical_data_2$Classification <-factor(Thalamus_plus_cortical_data_2$Classification, levels=X_order)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4) + geom_hline(aes(yintercept=.8), colour="#990000", linetype="dashed")
plot(Thalamus_boxplot)
ggsave(filename = 'WMD_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
setwd('~/Google Drive/Projects/Thalamus-Rest/')
CI_colors <- c("#6B006C", "red","yellow","cyan","blue", "brown", "#0E6E6C", "#008100", "pink")
Nuclei_Data <- read.csv('NucleiNetworkStrength.csv')
Variables_to_plot <- c('MD', 'PuM', 'VL', 'An', 'LGN', 'LP', 'IL', 'VA','VM'  )
for (v in Variables_to_plot){
plot_Data <- Nuclei_Data[Nuclei_Data$Nuclei==v,]
n_plot <- ggplot(data = plot_Data, aes(x=factor(Network), y=Connectivity.Porportion))
n_plot <- n_plot + geom_bar(stat = "identity", aes(fill=Network)) + labs(y = "% of Total \nConnectivity Weight") + theme_classic(base_size = 8)
n_plot <- n_plot +scale_fill_manual(values=CI_colors ) + geom_hline(aes(yintercept=11), colour="#990000", linetype="dashed")
n_plot <- n_plot + theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(), axis.text.x=element_blank(), axis.text = element_text(colour = "black"), legend.position="none")
ggsave(filename = paste(v,'_plot.pdf', sep=''), plot = n_plot, units = c("in"),width=1.5, height=1.25)
plot(n_plot)
}
setwd('~/Google Drive/Projects/Thalamus-Rest/')
# plot patient lesion extent
Variables_to_plot <- c('S1', 'S2', 'S3', 'S4')
PT_Data = read.csv('Patient_Q_v_PC.csv', header=TRUE)
pt_q_plot <- ggplot(data = PT_Data, aes(x=factor(SubjID), y=Q.Diff))
pt_q_plot <- pt_q_plot + geom_bar(stat = "identity")
pt_q_plot <- pt_q_plot + labs(x= "Patients", y = "Hemispheric Difference \n in Modularity") + theme_classic(base_size = 10)+ theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
ggsave(filename = "pt_q_plot.pdf", plot = pt_q_plot, units = c("in"),width=1.5, height=2)
plot(pt_q_plot)
pt_pc_plot <- ggplot(data = PT_Data, aes(x=factor(SubjID), y=Lesioned.PC))
pt_pc_plot <- pt_pc_plot + geom_bar(stat = "identity")
pt_pc_plot <- pt_pc_plot + ylim( 0, 1)
pt_pc_plot <- pt_pc_plot + labs(x= "Patients", y = "Mean PC (lesion)") + theme_classic(base_size = 10)+ theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
ggsave(filename = "pt_pc_plot.pdf", plot = pt_pc_plot, units = c("in"),width=1.5, height=2)
plot(pt_pc_plot)
pt_pc_plot <- ggplot(data = PT_Data, aes(x=factor(SubjID), y=Lesioned.WMD))
pt_pc_plot <- pt_pc_plot + geom_bar(stat = "identity")
pt_pc_plot <- pt_pc_plot + ylim( 0, 2)
pt_pc_plot <- pt_pc_plot + labs(x= "Patients", y = "Mean WMD (lesion)") + theme_classic(base_size = 10)+ theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
ggsave(filename = "pt_WMD_plot.pdf", plot = pt_pc_plot, units = c("in"),width=1.5, height=2)
plot(pt_pc_plot)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon Connector Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
ggsave(filename = 'PC_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
#WMD
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_plus_cortical_data_2$Classification <-factor(Thalamus_plus_cortical_data_2$Classification, levels=X_order)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4)
plot(Thalamus_boxplot)
ggsave(filename = 'WMD_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
#CogFlex
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=Classification, y=cog)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 10)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 7.5) +ylab("Cognitive Flexibility")
plot(Thalamus_boxplot)
ggsave(filename = 'Cog_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=5.5, height=2,dpi=300)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon Connector Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
ggsave(filename = 'PC_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
#WMD
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_plus_cortical_data_2$Classification <-factor(Thalamus_plus_cortical_data_2$Classification, levels=X_order)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4)
plot(Thalamus_boxplot)
ggsave(filename = 'WMD_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon  Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon  Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
ggsave(filename = 'PC_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
setwd('/Volumes/neuro/bin/FuncParcel/Data/')
# import libraries
library(ggplot2)
library(reshape2)
library(plyr)
library("grid")
#load data
Thalamus_Data = read.csv('Thalamus_nodal_WTA.csv', header=TRUE)
Cortical_Data = read.csv('Cortical_nodal_WTA.csv', header=TRUE)
Cortical_Data <- Cortical_Data[Cortical_Data$Functional.Network!='Other',]
Thalamus_plus_cortical_data <- read.csv('Cortical_plus_thalamus_nodal_WTA.csv', header=TRUE)
Thalamus_plus_cortical_data <- Thalamus_plus_cortical_data[Thalamus_plus_cortical_data$Classification!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Morel.Parcellations!='Unclassified',]
Thalamus_Data <- Thalamus_Data[Thalamus_Data$Functional.Network!='Other',]
### plot summary graph
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Hubs")
Thalamus_plus_cortical_data$Classification <-factor(Thalamus_plus_cortical_data$Classification, levels=X_order)
#PC, try boxplot for Mark
Thalamus_plus_cortical_data_1<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_1$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nConnector Hubs", "Cortical \nNon Connector Hubs", "Cortical \nNon Connector Hubs")
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_1, aes(x=Classification, y=PC)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 1)
plot(Thalamus_boxplot)
ggsave(filename = 'PC_classification_box.pdf', plot = Thalamus_boxplot, units = c("in"),width=4, height=2,dpi=300)
Thalamus_plus_cortical_data_2<- Thalamus_plus_cortical_data
levels(Thalamus_plus_cortical_data_2$Classification) <-c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nNon Provincial Hubs", "Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
X_order <- c('First Order \nThalamic Nuclei','Higher Order \nThalamic Nuclei',"Cortical \nProvincial Hubs", "Cortical \nNon Provincial Hubs")
Thalamus_plus_cortical_data_2$Classification <-factor(Thalamus_plus_cortical_data_2$Classification, levels=X_order)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data_2, aes(x=Classification, y=WMD)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 8)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( -4, 4)
plot(Thalamus_boxplot)
Thalamus_boxplot <- ggplot(data = Thalamus_plus_cortical_data, aes(x=Classification, y=cog)) + geom_boxplot(outlier.colour = NULL,outlier.shape = NA,fill = "grey80")
Thalamus_boxplot <- Thalamus_boxplot + theme_grey(base_size = 10)  + theme( axis.title.x=element_blank(), legend.position="none", axis.text = element_text(colour = "black"))
Thalamus_boxplot <- Thalamus_boxplot + ylim( 0, 7.5) +ylab("Cognitive Flexibility")
plot(Thalamus_boxplot)
